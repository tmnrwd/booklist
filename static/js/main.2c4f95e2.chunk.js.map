{"version":3,"sources":["BookList.js","AddBook.js","DeleteBook.js","UpdateBook.js","SearchBook.js","ApiClient.js","App.js","serviceWorker.js","index.js"],"names":["BookList","props","createList","response","bookList","books","Array","from","map","current","key","id","title","author","read","state","bind","this","React","Component","AddBook","event","newState","target","name","value","setState","preventDefault","onSubmit","Form","e","submitHandler","Group","controlId","Label","Control","type","onChange","handleChange","Check","label","Button","variant","DeleteBook","SearchBook","ApiClient","getList","getRequest","url","axios","get","then","console","log","status","catch","error","alert","Promise","resolve","reject","Error","statusText","post","delete","put","App","grabList","updateBookList","bookArray","data","array","IDsearch","onClick","newBook","UpdateBook","updateBook","deleteBook","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2c4f95e2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass BookList extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n\r\n    }\r\n    this.createList = this.createList.bind(this);\r\n  }\r\n\r\n  createList = () => {\r\n    let type = typeof(response)\r\n    if (type !== \"array\")\r\n    {\r\n      let bookList = this.props.books;\r\n      bookList = Array.from(bookList)\r\n      return bookList.map((current) => (\r\n        <tr key={current.id}>\r\n          <td>\r\n            {current.id}\r\n          </td>\r\n          <td>\r\n            {current.title}\r\n          </td>\r\n          <td>\r\n            {current.author}\r\n          </td>\r\n          <td>\r\n            {current.read ? \"Read\" : \"Unread\"}\r\n          </td>\r\n        </tr>\r\n      ))\r\n    } else {\r\n    return this.props.books.map((current) => (\r\n      <tr key={current.id}>\r\n        <td>\r\n          {current.id}\r\n        </td>\r\n        <td>\r\n          {current.title}\r\n        </td>\r\n        <td>\r\n          {current.author}\r\n        </td>\r\n        <td>\r\n          {current.read ? \"Read\" : \"Unread\"}\r\n        </td>\r\n      </tr>\r\n    )\r\n    )\r\n    }\r\n  }  \r\n\r\nrender() {\r\n  return (\r\n    <div>\r\n      <h1>The Book List</h1>\r\n      <table>\r\n      <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Title</th>\r\n              <th>Author</th>\r\n              <th>Read</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.createList()}\r\n          </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default BookList;","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass AddBook extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            \"id\": 0,\r\n            \"title\": \"\",\r\n            \"author\": \"\",\r\n            \"read\": false\r\n        }\r\n    }\r\n\r\nhandleChange(event) {\r\n        const newState = {};\r\n        if (event.target.name === 'read'){\r\n            newState[event.target.name] = !this.state.read\r\n        }\r\n        else { newState[event.target.name] = event.target.value }\r\n        this.setState(newState)\r\n}\r\n\r\nsubmitHandler(event) {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.id, this.state.title, this.state.author, this.state.read);\r\n    this.setState({\r\n        id: 0,\r\n        title: \"\",\r\n        author: \"\",\r\n        read: false\r\n    })\r\n}\r\n\r\nrender() {\r\n        return (\r\n            <>\r\n            <Form onSubmit={(e) => this.submitHandler(e)}>\r\n                <Form.Group controlId=\"title\">\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control name=\"title\" type=\"text\" value={this.state.title} onChange={(e) => this.handleChange(e)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"author\">\r\n                    <Form.Label>Author</Form.Label>\r\n                    <Form.Control name=\"author\" type=\"text\" value={this.state.author} onChange={(e) => this.handleChange(e)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"read\">\r\n                    <Form.Check name=\"read\" type=\"checkbox\" label=\"read\" value={this.state.read} onChange={(e) => this.handleChange(e)} />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Add Book\r\n                </Button>\r\n            </Form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddBook;","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass DeleteBook extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: 0,\r\n            title: \"\",\r\n            author: \"\",\r\n            read: false\r\n        }\r\n    }\r\n\r\nhandleChange(event) {\r\n        const newState = {};\r\n        if (event.target.name === 'read'){\r\n            newState[event.target.name] = !this.state.read\r\n        }\r\n        else { newState[event.target.name] = event.target.value }\r\n        this.setState(newState)\r\n}\r\n\r\nsubmitHandler(event) {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.id, this.state.title, this.state.author, this.state.read);\r\n    this.setState({\r\n        id: 0,\r\n        title: \"\",\r\n        author: \"\",\r\n        read: false\r\n    })\r\n}\r\n\r\nrender() {\r\n        return (\r\n            <>\r\n            <Form onSubmit={(e) => this.submitHandler(e)}>\r\n                <Form.Group controlId=\"taskID\">\r\n                    <Form.Label>Book ID</Form.Label>\r\n                    <Form.Control name=\"id\" type=\"number\" value={this.state.id} onChange={(e) => this.handleChange(e)}></Form.Control>\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Delete\r\n                </Button>\r\n            </Form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DeleteBook;","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass AddBook extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: 0,\r\n            title: \"\",\r\n            author: \"\",\r\n            read: false\r\n        }\r\n    }\r\n\r\nhandleChange(event) {\r\n        const newState = {};\r\n        if (event.target.name === 'read'){\r\n            newState[event.target.name] = !this.state.read\r\n        }\r\n        else { newState[event.target.name] = event.target.value }\r\n        this.setState(newState)\r\n}\r\n\r\nsubmitHandler(event) {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.id, this.state.title, this.state.author, this.state.read);\r\n    this.setState({\r\n        id: 0,\r\n        title: \"\",\r\n        author: \"\",\r\n        read: false\r\n    })\r\n}\r\n\r\nrender() {\r\n        return (\r\n            <>\r\n            <Form onSubmit={(e) => this.submitHandler(e)}>\r\n                <Form.Group controlId=\"taskID\">\r\n                    <Form.Label>Book ID</Form.Label>\r\n                    <Form.Control name=\"id\" type=\"number\" value={this.state.id} onChange={(e) => this.handleChange(e)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"title\">\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control name=\"title\" type=\"text\" value={this.state.title} onChange={(e) => this.handleChange(e)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"author\">\r\n                    <Form.Label>Author</Form.Label>\r\n                    <Form.Control name=\"author\" type=\"text\" value={this.state.author} onChange={(e) => this.handleChange(e)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"read\">\r\n                    <Form.Check name=\"read\" type=\"checkbox\" label=\"Tick to mark as Read; leave blank to mark as Unread\" value={this.state.read} onChange={(e) => this.handleChange(e)} />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Edit Book Entry\r\n                </Button>\r\n            </Form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddBook;","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass SearchBook extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: 0,\r\n            title: \"\",\r\n            author: \"\",\r\n            read: false\r\n        }\r\n    }\r\n\r\nhandleChange(event) {\r\n        const newState = {};\r\n        if (event.target.name === 'read'){\r\n            newState[event.target.name] = !this.state.read\r\n        }\r\n        else { newState[event.target.name] = event.target.value }\r\n        this.setState(newState)\r\n}\r\n\r\nsubmitHandler(event) {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.id, this.state.title, this.state.author, this.state.read);\r\n    this.setState({\r\n        id: 0,\r\n        title: \"\",\r\n        author: \"\",\r\n        read: false\r\n    })\r\n}\r\n\r\nrender() {\r\n        return (\r\n            <>\r\n            <Form onSubmit={(e) => this.submitHandler(e)}>\r\n                <Form.Group controlId=\"taskID\">\r\n                    <Form.Label>Book ID</Form.Label>\r\n                    <Form.Control name=\"id\" type=\"number\" value={this.state.id} onChange={(e) => this.handleChange(e)}></Form.Control>\r\n                </Form.Group>\r\n               \r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Search\r\n                </Button>\r\n            </Form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBook;","import axios from 'axios'\r\n\r\nexport class ApiClient {\r\n\r\n  status(response) {\r\n    if (response.status >= 200 && response.status < 300) {\r\n      return Promise.resolve(response)\r\n    } else {\r\n      return Promise.reject(new Error(response.statusText))\r\n    }\r\n  }\r\n\r\n  getList = () => {\r\n    return this.getRequest(\"https://cors-anywhere.herokuapp.com/https://agile-reaches-34490.herokuapp.com/booklist\")  \r\n  }\r\n  \r\n  getBookByID(id) {\r\n      return this.getRequest(`https://agile-reaches-34490.herokuapp.com/booklist/${id}`)\r\n  }\r\n\r\n  getRequest = (url) => {\r\n      return axios.get(url)\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .then = () => (this.status)\r\n      .catch(function (error) {\r\n        console.error(error);\r\n        alert(error)\r\n      })\r\n  }\r\n\r\n    addBook(id, title, author, read) {\r\n    return axios.post(`https://agile-reaches-34490.herokuapp.com/booklist/create`,\r\n    {\r\n        id: id,\r\n        title: title,\r\n        author: author, \r\n        read: read\r\n    }\r\n    )\r\n    .then(this.status)\r\n    .catch(function (error) {\r\n      // handle error\r\n      console.error(error);\r\n      alert(error)\r\n    })\r\n}\r\n\r\ndeleteBook(id) {\r\n    return axios.delete(`https://agile-reaches-34490.herokuapp.com/booklist/${id}`,\r\n    )\r\n    .then(this.status)\r\n    .catch(function (error) {\r\n      // handle error\r\n      console.error(error);\r\n      alert(error)\r\n    })\r\n}\r\n\r\nupdateBook(id, title, author, read) {\r\n    return axios.put(`https://agile-reaches-34490.herokuapp.com/booklist/${id}`,\r\n    {\r\n        title: title,\r\n        author: author, \r\n        read: read\r\n    }\r\n    )\r\n    .then(this.status)\r\n    .catch(function (error) {\r\n      // handle error\r\n      console.error(error);\r\n      alert(error)\r\n    })\r\n}\r\n\r\n}","import React from 'react';\nimport BookList from './BookList'\nimport AddBook from './AddBook'\nimport DeleteBook from './DeleteBook'\nimport UpdateBook from './UpdateBook'\nimport SearchBook from './SearchBook'\nimport { ApiClient } from './ApiClient'\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n          books: [\n            {\n          \"id\": 0,\n          \"title\": \"Loading...\",\n          \"author\": \"\",\n          \"read\": false\n        }\n      ]\n    }\n    this.ApiClient = new ApiClient();\n    this.updateBookList = this.updateBookList.bind(this);\n  }\n\ngrabList = () => {\n  axios.get(\"https://cors-anywhere.herokuapp.com/https://agile-reaches-34490.herokuapp.com/booklist\")\n  .then((response) => {\n    this.updateBookList(response);\n  })\n}\n\nupdateBookList = (response) => {\n  console.log(\"Book List update response is\", response)\n  const bookArray = response.data\n  this.setState(() => ({\n    books: bookArray\n  }));\n}\n\nnewBook(id, title, author, read) {\n  axios.post(`https://cors-anywhere.herokuapp.com/https://agile-reaches-34490.herokuapp.com/booklist/create`,\n    {\n        id: id,\n        title: title,\n        author: author, \n        read: read\n    }\n    )\n    .then((response) => {\n      this.grabList(response);\n    })\n}\n\ndeleteBook(id) {\n  axios.delete(`https://cors-anywhere.herokuapp.com/https://agile-reaches-34490.herokuapp.com/booklist/${id}`,\n    {\n        id: id\n    }\n    )\n    .then((response) => {\n      this.grabList(response);\n    })\n}\n\nupdateBook(id, title, author, read) {\n  axios.put(`https://cors-anywhere.herokuapp.com/https://agile-reaches-34490.herokuapp.com/booklist/${id}`,\n  {\n      title: title,\n      author: author, \n      read: read\n  }\n  )\n  .then(this.status)\n  .catch(function (error) {\n    console.error(error);\n    alert(error)\n  })\n  .then((response) => {\n    this.grabList(response);\n  })\n}\n\nIDsearch(id) {\n  axios.get(`https://cors-anywhere.herokuapp.com/https://agile-reaches-34490.herokuapp.com/booklist/${id}`)\n  .then((response) => {\n    const search = response.data\n    let array = [search]\n    this.setState(() => ({\n      books: array\n    }))\n  })\n  }\n\ncomponentDidMount(){\n  this.grabList()\n}\n\nrender() {\n  return (\n    <>\n    <BookList books={this.state.books}/>\n    <br></br>\n    <h3>Book Search</h3>\n    <SearchBook onSubmit={ (id) => this.IDsearch(id)} />\n    <br></br>\n    <Form><Button onClick={this.grabList}>Display Entire List</Button></Form>\n    <br></br>\n    <h3>Add Book to List</h3>\n    <AddBook onSubmit={ (id, title, author, read) => this.newBook(id, title, author, read)} />\n    <br></br>\n    <h4>Edit Book Entry</h4>\n    <UpdateBook onSubmit={ (id, title, author, read) => this.updateBook(id, title, author, read)} />\n    <br></br>\n    <h4>Delete Book</h4>\n    <DeleteBook onSubmit={ (id) => this.deleteBook(id)} />\n    </>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}